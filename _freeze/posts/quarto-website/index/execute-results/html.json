{
  "hash": "89d23bfb7431ba5c04dc681e99d25e83",
  "result": {
    "markdown": "---\ntitle: \"Crafting your website with Quarto and GitHub\"\nauthor: \"Lucas Godoy\"\ndate: \"2023-09-08\"\ncategories: [miscelllaneous]\nengine: knitr\n---\n\n\n## Terminal basics\n\n* `pwd` lists current directory;\n\n* `ls` lists directory content. For example, run `ls my-dir` to know what is\n  inside the directory called `my-dir`.\n\n* `cd` stands for change directory. To navigate to a directory, use: `cd\n  <path-to-directory>`;\n  \n* `mv` Moves or renames files. Usage: `mv <old-name/location> <new-name/location>`;\n  \n## Pre-requisites\n\nWe assume you have:\n\n1. [`Quarto`](https://quarto.org/) installed on your labtop;\n2. A [GitHub](https://github.com/) account;\n3. A `terminal` available (Windows users, see\n   [this](https://learn.microsoft.com/en-us/windows/terminal/install)).\n   \n## Step 1: create a repo\n\nIn this workshop, we assume you are creating a personal web page. GitHub allows\nyou to host a personal website for free under the domain\n`<username>.github.io`. To use this domain, we first need to create a GitHub\nrepository named like that. For example, in this talk we will create a website\nfor a user called `statcomp-org`, see the image below: \n\n![](create-repo.png)\n\n## Step 2: Using our quarto template\n\nOpen a terminal window and navigate to a directory where you want to keep your\nwebsite. On my laptop, I have a directory (or folder) called `git-projects`\nwhere I store all the `git` repos I work with. The following code chunk creates\na directory to store your website locally and navigates to it.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nmkdir <your-username>.github.io\ncd <your-username>.github.io\n```\n:::\n\n\nNow, we obtain a template running the following command:\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nquarto use template swosc/quarto-template\n```\n:::\n\n\nYou will be asked the following questions. Type \"Y\" and enter and \".\" and enter,\nrespectively.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nQuarto templates may execute code when documents are rendered. If you do not \ntrust the authors of the template, we recommend that you do not install or \nuse the template.\n? Do you trust the authors of this template (Y/n) › Y\n? Directory name: › .\n```\n:::\n\n\n::: {.callout-important}\nWhen running the command below, we are assuming your current \"working directory\"\nin the terminal is the directory where you are going to keep your website.  Run\n`pwd`, to make sure you are working on the right directory.\n:::\n\nLet us use `ls` to track the files that were generated in our directory:\n\n::: {.cell}\n\n```{.bash .cell-code}\nls\nLICENSE.md Makefile _quarto.yml apa-cv.csl blog.qmd  index.qmd  lua-refs.lua posts  profile.jpg  pubs.bib     styles.css\n```\n:::\n\n\n::: {.callout-tip}\nAlways avoid creating filenames with special charaters or spaces.\n:::\n\nThe structure of the folder is as follows:\n```{m\n.\n├── LICENSE.md\n├── Makefile\n├── _quarto.yml\n├── apa-cv.csl\n├── blog.qmd\n├── github\n│   └── workflows\n│       └── publish.yml\n├── gitignore\n├── index.qmd\n├── lua-refs.lua\n├── posts\n│   ├── _metadata.yml\n│   ├── post-with-code\n│   │   ├── image.jpg\n│   │   └── index.qmd\n│   └── welcome\n│       ├── index.qmd\n│       └── thumbnail.jpg\n├── profile.jpg\n├── pubs.bib\n└── styles.css\n```\nSee below a description on what each of those files are:\n\n- `LICENSE.md` contains the license for your website repo. Currently, the\n  license in the template is a\n  [CC-BY](https://creativecommons.org/licenses/by/4.0/) license. That is, anyone\n  is free to share and adapt, must give appropriate credit. You can use the\n  `usethis` package to change this license. See [this\n  link](https://usethis.r-lib.org/reference/licenses.html) for thurther info.\n\n- `Makefile` will only be used if you wish to include a page in the website with\n  your publications. If that's the case, you should include your publications\n  (in `BibTeX` format) in the `pubs.bib` file. Moreover, to highlight your name\n  in the authorships, replace `Hernandez, K.` with your name within the\n      `Makefile`. See the Figure below for a reference.\n\n![](makefile.png)\n\n- `_quarto.yml` is perhaps the most important file we will keep. It will give\n  instructions on how to design the website (more on this later).\n\n- `apa-cv.csl` is a helper that controls the templates of the publications list\n  that may be generated using the Makefile.\n  \n- `blog.md` is the file that will control how your \"blog\" page looks like.\n\n- `github` is a folder that we need to rename to `.github`. It will help GitHub\n  to publish your website online.\n\n- `gitignore` rename to `.gitignore`. This file will store the name of the files\n  you do not want to push to GitHub.\n\n- `index.qmd` is the landing page of your website.\n\n- `lua-refs.lua` is a `lua` script that will be used to generate your\n  publications list (optional).\n  \n- `posts/` is a folder containing your posts and some metadata (optional, only\n  if you want to blog as well)\n  * The `_metadata.yml` contains some information on how to deal with your\n    posts. In particular, it will tell GitHub avoid compiling them (we will\n    compile the posts locally)\n  * Each subfolder represents a blog post. Within the blogpost folder, we need a\n    `index.qmd` file (more on this later).\n\n- `profile.jpg` replace this with your profile picture.\n\n- `pubs.bibs` (optional) input your publications in `BibTeX` here.\n\n- `styles.css` allows for further customization of the website.\n\n## Step 3: setting up git repo\n\nThe next step is to setup the `git` repo. Before doing so, let's rename the `.github` and `.gitignore` files. This is achieved by running:\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nmv github .github\nmv gitignore .gitignore\n```\n:::\n\n\nNow, let's set the git repo and push the gitignore file to the remote repo.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\ngit init\ngit add .gitignore\ngit commit -m \"commiting gitignore\"\ngit branch -M main\ngit remote add origin git@github.com:<your-username>/<your-username>.github.io\ngit push -u origin main\n```\n:::\n\n\nIf you want to get a grasp of how the website is looking like, run:\n\n::: {.cell}\n\n```{.bash .cell-code}\nquarto preview\n```\n:::\n\n\n## Step 4: Let's customize our website!\n\nFirst, we will customize the `index.qmd` file.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}